{"mappings":"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","sources":["src/JS/hero.js","src/JS/stars-rating.js"],"sourcesContent":["import starsRating from './stars-rating';\n\nconst API_KEY = '58fde9f9a3392c3dbee86a1f2142354e';\nconst RANDOM_NUMBER = Math.floor(Math.random() * (19 - 0 + 1)) + 0;\nconst axios = require('axios').default;\n\nconst refs = {\n  heroDiv: document.getElementById('hero-div'),\n  heroTitle: document.getElementById('hero-title'),\n  heroOverview: document.getElementById('hero-overview'),\n  heroBtnDiv: document.getElementById('hero-btn-div'),\n  heroFilmDataEl: document.querySelector('.hero-info-wrap'), //це елемент, на який вішаються дата-атрибути ID та vote_average\n};\n\n// console.log(refs.heroFilmDataEl);\n\nwindow.addEventListener('load', heroInfoShow);\n\nfunction heroInfoShow() {\n  getFilmInfo().then(({ data }) => {\n    console.log(data);\n\n    // Змінні усієї інформації фільму\n    const filmInfo = data.results[RANDOM_NUMBER];\n    const filmPicturePath = filmInfo.backdrop_path;\n    const filmPictureUrl = `\"https://image.tmdb.org/t/p/original/${filmPicturePath}\"`;\n    const filmName = filmInfo.title;\n    const filmOverview = filmInfo.overview;\n    const filmId = filmInfo.id;\n    const filmRating = filmInfo.vote_average;\n\n    console.log(filmInfo, filmId, filmRating);\n\n    createHeroMarkUp(filmPictureUrl, filmName, filmOverview); //функція розмітки hero\n    createSuccessFetchBtnMurkUp(); // функція додавання кнопок при успішному запиту\n    createDataSet(filmId, filmRating); // функція додавання дата-атрибутів при успішному запиту для трейлеру, зірочок рейтингу і таке інше\n\n    starsRating({ voteAverage: filmRating, isHero: true });\n  });\n}\n\n//базовий фетч function getFilmInfo() {\n//   return fetch(\n//     'https://api.themoviedb.org/3/trending/movie/day?api_key=58fde9f9a3392c3dbee86a1f2142354e'\n//   ).then(res => res.json());\n// }\n\nasync function getFilmInfo() {\n  try {\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n\n    return res;\n  } catch (error) {\n    onHeroFetchError(error);\n  }\n}\n\n//базова розмітка при успішному запиту\nfunction createHeroMarkUp(picturePath, filmName, filmDescription) {\n  refs.heroDiv.style.backgroundImage = `linear-gradient(79.39deg, #111111 32.37%, rgba(17, 17, 17, 0) 42.02%), \n  url(${picturePath})`;\n  refs.heroTitle.textContent = `${filmName}`;\n  refs.heroOverview.textContent = `${filmDescription}`;\n}\n\n//базова розмітка при помилці\nfunction onHeroFetchError(err) {\n  refs.heroDiv.classList.add('hero-container-bg');\n\n  const heroDefaultImage = `../images/default-bgimage.jpg`;\n  const heroDefaultName = `Let’s Make Your Own Cinema`;\n  const heroDefaultOverview = `Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. Decorate your space, choose your films, and stock up on snacks for the full experience.`;\n\n  createHeroMarkUp(heroDefaultImage, heroDefaultName, heroDefaultOverview);\n  createDefaultBtnMarkUp();\n}\n\n// функція додавання кнопки при помилці запиту\nfunction createDefaultBtnMarkUp() {\n  const heroDefaultBtn = document.createElement('button');\n  heroDefaultBtn.textContent = 'Get Started';\n  heroDefaultBtn.classList.add('css-btn-trailer');\n  heroDefaultBtn.setAttribute('type', 'button');\n  refs.heroBtnDiv.append(heroDefaultBtn);\n}\n\n//функція додавання кнопок при успішному запиту\nfunction createSuccessFetchBtnMurkUp() {\n  const heroTrailertBtn = document.createElement('button');\n  heroTrailertBtn.textContent = 'Watch Trailer';\n  heroTrailertBtn.classList.add('css-btn-trailer');\n  heroTrailertBtn.setAttribute('type', 'button');\n  refs.heroBtnDiv.append(heroTrailertBtn);\n\n  const heroDetailstBtn = document.createElement('button');\n  heroDetailstBtn.textContent = 'More Details';\n  heroDetailstBtn.classList.add('css-bnt-info');\n  heroDetailstBtn.setAttribute('type', 'button');\n  refs.heroBtnDiv.append(heroDetailstBtn);\n}\n\n//функція для створення дата-атрибутів для використання\nfunction createDataSet(id, rating) {\n  refs.heroFilmDataEl.dataset.id = id;\n  refs.heroFilmDataEl.dataset.rating = rating;\n}\n","// ! Імпортувати starsRating до головного скрипту кожної сторінки, де у Hero є зірковий рейтинг\n\nconst starsContainer = document.querySelector('.stars-container');\nconst lastMask = document.querySelector('#defs').lastElementChild;\nconst mask = document.querySelector('.mask');\n\nlet maskCounter = 0;\n\nconst starBg = {\n  filled: '<use href=\"#star\" fill=\"url(#star-fill--complete)\"></use>',\n  masked: '',\n  empty: '<use href=\"#star\" fill=\"none\"></use>',\n};\n\nexport default function starsRating({ voteAverage, isHero }) {\n  const starsValue = convertRatingToStars(Number(voteAverage));\n\n  starBg.masked = `<use href=\"#star\" mask=\"url(#star-fill--partly${maskCounter})\" fill=\"url(#star-fill--complete)\"></use><use href=\"#star\" fill=\"none\" stroke=\"url(#star-stroke)\"></use>`;\n\n  addMaskId(maskCounter, starsValue);\n  maskCounter++;\n\n  return placeMarkup(starsValue, isHero);\n}\n\nfunction convertRatingToStars(voteAverage) {\n  if (!voteAverage || voteAverage <= 0 || voteAverage > 10) {\n    return 0;\n  }\n\n  return Number((voteAverage / 2).toFixed(1));\n}\n\nfunction addMaskId(maskId, starsValue) {\n  const maskShare = Math.floor(\n    (Number.parseFloat(starsValue) - Number.parseInt(starsValue)) * 100\n  );\n\n  if (maskId === 0) {\n    mask.innerHTML = `\n\t\t<rect x=\"0\" y=\"0\" width=\"18\" height=\"16\" fill=\"white\" />\n\t\t<rect x=\"${maskShare}%\" y=\"0\" width=\"18\" height=\"16\" fill=\"black\" />`;\n  } else {\n    const newMask = `\n\t\t<mask id=\"star-fill--partly${maskId}\" class=\"mask\">\n\t\t\t<rect x=\"0\" y=\"0\" width=\"18\" height=\"16\" fill=\"white\" />\n\t\t\t<rect x=\"${maskShare}%\" y=\"0\" width=\"18\" height=\"16\" fill=\"black\" />\n\t\t</mask>`;\n\n    lastMask.insertAdjacentHTML('beforebegin', newMask);\n  }\n}\n\nfunction placeMarkup(starsValue, isHero) {\n  if (!isHero) {\n    return markupRender(starsValue);\n  }\n\n  starsContainer.insertAdjacentHTML('beforeend', markupRender(starsValue));\n\n  const refsHero = {\n    starsList: document.querySelector('.stars-list'),\n    starsListImg: document.querySelectorAll('.stars-list__img'),\n  };\n\n  starsContainer.classList.add('stars-container--hero');\n  refsHero.starsList.classList.add('stars-list--hero');\n  refsHero.starsListImg.forEach(item =>\n    item.classList.add('stars-list__img--hero')\n  );\n}\n\nfunction markupRender(starsValue) {\n  if (!starsValue) {\n    return '<p class=\"stars-absent\">Not rated yet</p>';\n  }\n\n  const starsCountFilled = Number.parseInt(starsValue);\n  const starsCountMasked = starsValue - starsCountFilled === 0 ? 0 : 1;\n  const starsCountEmpty = 5 - starsCountFilled - starsCountMasked;\n  const { filled, masked, empty } = starBg;\n\n  const starsListStart = listRender(starsValue);\n  const starsFilled = starsRender(starsCountFilled, filled);\n  const starsMasked = starsRender(starsCountMasked, masked);\n  const starsEmpty = starsRender(starsCountEmpty, empty);\n\n  return starsListStart + starsFilled + starsMasked + starsEmpty + '</ul>';\n}\n\nfunction listRender(starsValue) {\n  return `<ul class=\"stars-list\" aria-label=\"Rating: ${starsValue} stars out of 5.0\" title=\"Rating: ${starsValue} stars out of 5.0\">`;\n}\n\nfunction starsRender(starsCount, starsType) {\n  let markup = '';\n\n  for (let i = 1; i <= starsCount; i++) {\n    markup += `\n\t\t\t<li class=\"stars-list__item\">\n\t\t\t\t<svg class=\"stars-list__img\" viewBox=\"0 0 18 16\">\n\t\t\t\t\t${starsType}\n\t\t\t\t</svg>\n\t\t\t</li>`;\n  }\n\n  return markup;\n}\n"],"names":["$h85Iw","parcelRequire","$61e059b9b65a74f5$var$RANDOM_NUMBER","Math","floor","random","default","$61e059b9b65a74f5$var$refs","heroDiv","document","getElementById","heroTitle","heroOverview","heroBtnDiv","heroFilmDataEl","querySelector","$61e059b9b65a74f5$var$createHeroMarkUp","picturePath","filmName","filmDescription","style","backgroundImage","textContent","window","addEventListener","async","$61e059b9b65a74f5$require$axios","get","error","err","classList","add","heroDefaultBtn","createElement","setAttribute","append","$61e059b9b65a74f5$var$createDefaultBtnMarkUp","$61e059b9b65a74f5$var$onHeroFetchError","$61e059b9b65a74f5$var$getFilmInfo","then","data","console","log","filmInfo","results","filmPictureUrl","backdrop_path","title","filmOverview","overview","filmId","id","filmRating","vote_average","rating","heroTrailertBtn","heroDetailstBtn","$61e059b9b65a74f5$var$createSuccessFetchBtnMurkUp","dataset","voteAverage","isHero","$c7879e557db022eb$var$starsContainer","$c7879e557db022eb$var$lastMask","lastElementChild","$c7879e557db022eb$var$mask","$c7879e557db022eb$var$maskCounter","$c7879e557db022eb$var$starBg","filled","masked","empty","$c7879e557db022eb$export$2e2bcd8739ae039","starsValue","Number","toFixed","$c7879e557db022eb$var$convertRatingToStars","maskId","maskShare","parseFloat","parseInt","innerHTML","newMask","insertAdjacentHTML","$c7879e557db022eb$var$addMaskId","$c7879e557db022eb$var$markupRender","refsHero","starsList","starsListImg","querySelectorAll","forEach","item","$c7879e557db022eb$var$placeMarkup","starsCountFilled","starsCountMasked","starsCountEmpty","starsListStart","$c7879e557db022eb$var$listRender","$c7879e557db022eb$var$starsRender","starsCount","starsType","markup","i"],"version":3,"file":"catalog.ee0adef2.js.map"}