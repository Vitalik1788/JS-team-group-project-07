{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-648d63679a0408bf.js","src/catalog.js","src/JS/catalog/components/refs.js","node_modules/@swc/helpers/lib/_define_property.js","src/JS/catalog/components/api_service.js","src/JS/catalog/components/create-movie-card.js","node_modules/@parcel/runtime-js/lib/runtime-4f63533f89ced1db.js","src/JS/catalog.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"9NLH0\\\":\\\"catalog.64c8858c.js\\\",\\\"bfHyM\\\":\\\"default.183d728c.jpg\\\",\\\"1V5gE\\\":\\\"catalog.6c167da5.js\\\"}\"));","import './JS/header.js';\nimport './JS/hero.js';\nimport './JS/catalog.js';","export const refs = {\n  searchForm: document.getElementById('movieSearchForm'),\n  searchInput: document.getElementById('movieInput'),\n  catalogList: document.getElementById('movieList'),\n  searchBtn: document.querySelector('.search-button'),\n  cancelBtn: document.querySelector('.cancel-button'),\n  nextPageBtn: document.querySelector('.next-button'),\n  prevPageBtn: document.querySelector('.prev-button'),\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","export default class ApiService {\n  static BASE_URL = 'https://api.themoviedb.org/3';\n  static API_KEY = '41b8f9437bf3f899281f8a3f9bdc0891';\n\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.totalAmount = 0;\n  }\n\n  async getMovies() {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: `Bearer ${ApiService.API_KEY}`,\n      },\n    };\n\n    let url = '';\n    if (this.searchQuery) {\n      url = `${ApiService.BASE_URL}/search/movie?api_key=${ApiService.API_KEY}&query=${this.searchQuery}&include_adult=false&language=en-US&page=${this.page}`;\n    } else {\n      url = `${ApiService.BASE_URL}/trending/all/week?api_key=${ApiService.API_KEY}&language=en-US&page=${this.page}`;\n    }\n\n    try {\n      const response = await fetch(url, options);\n      const movies = await response.json();\n      return movies;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  decrementPage() {\n    this.page -= 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get total() {\n    return this.totalAmount;\n  }\n\n  set total(newTotal) {\n    this.totalAmount = newTotal;\n  }\n\n  resetTotal() {\n    this.totalAmount = 0;\n  }\n}\n","import { refs } from './refs';\nimport defaultImg from '../../../images/default.jpg';\n\nexport function createMovieCard(data) {\n  const markup = data.results\n    .map(movie => {\n      const imageSrc = movie.poster_path\n        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        : `${defaultImg}`;\n\n      return `<li class=\"card-item item\">\n            <img class=\"film-poster\" src=\"${imageSrc}\" alt=\"${\n        movie.original_title\n      }\" />\n            <div class=\"overlay\">\n              <div class=\"film-info\">\n                <p class=\"film-title\">${movie.original_title || movie.name}</p>\n                <div class=\"film-details\">\n                  <span class=\"film-description\">${[...movie.genre_ids]} | ${\n        new Date(movie.release_date).getFullYear() ||\n        new Date(movie.first_air_date).getFullYear()\n      } </span>\n                  <span class=\"film-rating\">${Math.round(\n                    movie.vote_average\n                  )}</span>\n                </div>\n              </div>\n            </div>\n          </li>`;\n    })\n    .join('');\n\n  refs.catalogList.innerHTML = markup;\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bfHyM\")).toString();","import { refs } from './catalog/components/refs';\nimport ApiService from './catalog/components/api_service';\nimport { createMovieCard } from './catalog/components/create-movie-card';\n\nconst apiService = new ApiService();\nlet currentPage = 1;\n\nrefs.searchForm.addEventListener('submit', getInputValue);\nrefs.cancelBtn.addEventListener('click', clearInputValue);\n\nrefs.nextPageBtn.addEventListener('click', onNextPage);\nrefs.prevPageBtn.addEventListener('click', onPrevPage);\n\nrenderWeeklyTrends(currentPage);\n\nfunction renderWeeklyTrends(page) {\n  apiService.getMovies(page).then(data => {\n    createMovieCard(data);\n  });\n}\n\nfunction onNextPage() {\n  currentPage += 1;\n  apiService.incrementPage();\n  renderWeeklyTrends(currentPage);\n}\n\nfunction onPrevPage() {\n  if (currentPage > 1) {\n    currentPage -= 1;\n    apiService.decrementPage();\n    renderWeeklyTrends(currentPage);\n  }\n}\n\nfunction getInputValue(e) {\n  e.preventDefault();\n\n  apiService.query = refs.searchInput.value.trim();\n  apiService.resetPage();\n  apiService.resetTotal();\n\n  apiService.getMovies().then(data => {\n    if (apiService.query === '') {\n      alert('error');\n      refs.catalogList.innerHTML = '';\n      return;\n    }\n\n    apiService.total = data.total_results;\n    const markup = createMovieCard(data);\n\n    refs.searchInput.value = '';\n  });\n}\n\nfunction clearInputValue() {\n  refs.searchInput.value = '';\n}\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$c4220199fe967ab2$export$21666b427502ea6d","searchForm","document","getElementById","searchInput","catalogList","searchBtn","querySelector","cancelBtn","nextPageBtn","prevPageBtn","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$3eda6201eb0cd243$export$2e2bcd8739ae039","async","options","method","headers","accept","Authorization","API_KEY","url","this","searchQuery","BASE_URL","page","response","fetch","json","error","console","incrementPage","decrementPage","resetPage","query","newQuery","total","totalAmount","newTotal","resetTotal","constructor","$parcel$interopDefault","$f2b508b528bf3e05$export$9d27b867a89df126","data","markup","results","map","movie","poster_path","$d77a59c1df57a7d8$exports","original_title","name","genre_ids","Date","release_date","getFullYear","first_air_date","Math","round","vote_average","join","innerHTML","URL","resolve","import","meta","toString","$3a5f31b8e9243524$var$apiService","$3a5f31b8e9243524$var$currentPage","$3a5f31b8e9243524$var$renderWeeklyTrends","getMovies","then","addEventListener","e","preventDefault","trim","alert","total_results"],"version":3,"file":"catalog.64c8858c.js.map"}