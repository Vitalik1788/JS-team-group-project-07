{"mappings":"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","sources":["src/javascript/loader.js","src/upcoming/upcoming.js","src/upcoming/api-service.js","src/upcoming/create-upcoming-markup.js","src/upcoming/img-handler.js"],"sourcesContent":["const loaderEl = document.querySelector('.loader');\n\nloaderInit();\n\nwindow.onload = () => {\n  loaderEl.classList.remove('loader--shown');\n  document.body.removeAttribute('style');\n};\n\nfunction loaderInit() {\n  const scrollBarWidth =\n    window.innerWidth - document.documentElement.clientWidth;\n\n  // loaderEl.classList.add('loader--shown');\n  document.body.style.overflow = 'hidden';\n  document.body.style.paddingRight = `${scrollBarWidth}px`;\n}\n","import debounce from 'lodash.debounce';\nimport { getUpcomingMovies } from './api-service';\nimport { careateUpcomingMarkup } from './create-upcoming-markup';\nimport { handleUpcomingImg } from './img-handler';\nimport { getRandomItem } from './helpers';\n// import defaultImg from '../images/logo.png';\n\nconst upcomingEl = document.querySelector('.upcoming-card');\n\nwindow.addEventListener('DOMContentLoaded', handleUpcoming);\n\nasync function handleUpcoming() {\n  try {\n    const upcomingMovies = await getUpcomingMovies();\n    const randomMovie = getRandomItem(upcomingMovies);\n    // console.log(randomMovie);\n    \n    const markup = careateUpcomingMarkup(randomMovie);\n    \n    updateUpcoming(markup);\n    // handleUpcomingImg(randomMovie);\n\n    const debouncedImgHandler = debounce(\n      () => handleUpcomingImg(randomMovie),\n      200\n    );\n\n    window.addEventListener('resize', debouncedImgHandler);\n    //\n  } catch (error) {\n    console.error('error:', error);\n    // updateUpcoming(failMarkup)\n    ('ERR_BAD_REQUEST');\n  }\n}\n\nfunction updateUpcoming(markup = '') {\n  upcomingEl.innerHTML = markup;\n}\n\n\n","import axios from 'axios';\n// import { API_KEY } from '../fetch/api_key';\nimport { API_BAERER } from '../fetch/api_key';\n\nconst upcomingMoviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/movie/upcoming',\n  // params: { language: 'en-US', page: '1', region: 'UA' },\n  headers: { Authorization: `Bearer ${API_BAERER}` },\n});\n\nexport async function getUpcomingMovies() {\n  const response = await upcomingMoviesApi.get();\n  // console.log(response);\n  return response.data.results;\n}\n","import { roundToTen, findFilmAtStorage } from './helpers';\nimport { STORAGE_KEY } from '../fetch/api_key';\nimport { validateGenres } from '../javascript/weekly-trends-genres';\nexport function careateUpcomingMarkup(film) {\n  const {\n    backdrop_path,\n    poster_path,\n    title,\n    release_date,\n    popularity,\n    vote_count,\n    vote_average,\n    genre_ids,\n    overview,\n    id,\n  } = film;\n\n  const isSaved = findFilmAtStorage(STORAGE_KEY, id);\n  // console.log('myIsSaved', isSaved);\n\n  const btnAttribute = isSaved ? 'remove' : 'add';\n  const btnText = isSaved ? 'Remove from my library' : 'Add to my library';\n  //\n  const imgPath = window.screen.width < 768 ? poster_path : backdrop_path;\n  const transformedDate = release_date.replaceAll('-', '.');\n  const roundedPopularity = roundToTen(popularity);\n\n  // const trimedGenres = trimGenreList(['comedy', 'action', 'thriller']);\n\n  // function trimGenreList(genres) {\n  //   if (genres.length > 2) return `${genres.slice(0, 2).join(', ')}, ...`;\n  //   else return `${genres.join(', ')}`;\n  // }\n\n\n  const genres = validateGenres(\n    genre_ids,\n    JSON.parse(localStorage.getItem('genres'))\n  );\n  //console.log(genresPromise)\n  //const genres = await genresPromise;\n  //const genres = Promise.resolve(genresPromise).then(result => result);\n  //console.log(genres);\n\n  return `\n        <div class='upcoming-card__figure'>\n          <div class='upcoming-card__layout'></div>\n            <img\n              src=\"https://image.tmdb.org/t/p/original${imgPath}\"\n              alt=\"${title}\"\n              loading='lazy'\n              class='upcoming-card__img'\n            > \n          </div>\n        </div>\n        <div class='upcoming-card__body'>\n          <h3 class=\"upcoming-card__title\">${title}</h3>\n          <div class='metrics-list__main-container'>\n            <ul class=\"list metrics-list\">\n              <li class=\"metrics-list__item\">\n                <p class=\"metrics-text\">Release date</p>\n                <p class=\"metrics-text metrics-text--date\">${transformedDate}</p>\n              </li>\n              <li class=\"metrics-list__item\">\n                <p class=\"metrics-text\">Vote / Votes</p>\n                <p class=\"metrics-text metrics-text--vote\">\n                  <span class=\"vote-wrapper\">${vote_average}</span>\n                  /\n                  <span class=\"vote-wrapper\">${vote_count}</span>\n                </p>\n              </li>\n              <li class=\"metrics-list__item\">\n                <p class=\"metrics-text\">Popularity</p>\n                <p class=\"metrics-text\">${roundedPopularity}</p>\n              </li>\n              <li class=\"metrics-list__item\">\n                <p class=\"metrics-text\">Genre</p>\n                <p class=\"metrics-text\">${genres}</p>\n              </li>\n            </ul>\n          </div>\n          <h4 class=\"upcoming-card__subtitle metrics-text\">ABOUT</h4>\n            <p class=\"upcoming-card__text\">${overview}</p>\n          <button class=\"btn\" type=\"button\" data-id=${id} data-${btnAttribute}>${btnText}</button>\n        </div>`;\n}\n","export function handleUpcomingImg({ poster_path, backdrop_path, title }) {\n  // const imgContainerEl = document.querySelector('.upcoming-card__figure');\n  // if (!imgContainerEl) return console.log('no upcoming section');\n\n  // const imgIsPresent = imgContainerEl.firstElementChild?.nodeName === 'IMG';\n  // console.log(imgIsPresent);\n\n  const mediaWidth = window.matchMedia('(max-width: 767px)');\n  // mediaWidth.onchange(() => console.log('change media'));\n  // console.log(mediaWidth);\n\n  const img = document.querySelector('.upcoming-card__img');\n  if (!img) return console.log('no upcoming section');\n\n  const posterLink = `https://image.tmdb.org/t/p/original${poster_path}`;\n  const backdropLink = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n\n  if (window.screen.width < 768 && img.src !== posterLink) {\n    return (img.src = posterLink);\n  }\n\n  if (window.screen.width >= 768 && img.src !== backdropLink) {\n    return (img.src = backdropLink);\n  }\n\n  // if (imgIsPresent && !mediaWidth.matches) {\n  //   clearElement(imgContainerEl);\n  // }\n\n  // if (imgIsPresent) return;\n\n  // if (mediaWidth.matches) {\n  //   const img = document.createElement('img');\n\n  //   const link = poster_path\n  //     ? `https://image.tmdb.org/t/p/original${poster_path}`\n  //     : defaultImg;\n\n  //   img.src = link;\n  //   img.alt = title;\n  //   img.loading = 'lazy';\n  //   img.classList.add('upcoming-card__poster');\n\n  //   console.log(img);\n  //   imgContainerEl.append(img);\n  // }\n}\n\nfunction checkMedia(url) {\n  x = window.matchMedia('(max-width: 767px)');\n  if (x.matches) return console.log(url);\n  console.log('more');\n}\n"],"names":["scrollBarWidth","$9d531f8f98d299ab$var$loaderEl","document","querySelector","window","innerWidth","documentElement","clientWidth","body","style","overflow","paddingRight","concat","onload","classList","remove","removeAttribute","$bpxeT","parcelRequire","$965486d353ac99dd$var$upcomingMoviesApi","$dIxxU","default","create","baseURL","headers","Authorization","$fpBey","API_BAERER","$965486d353ac99dd$export$577747a77907970f","$965486d353ac99dd$var$_getUpcomingMovies","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","get","_ctx","sent","data","results","$idULJ","$e2fbcea5d2e9ae53$export$f4becdac8252a1ad","film","backdrop_path","poster_path","title","release_date","popularity","vote_count","vote_average","genre_ids","overview","id","isSaved","findFilmAtStorage","STORAGE_KEY","btnAttribute","btnText","imgPath","screen","width","transformedDate","replaceAll","roundedPopularity","roundToTen","genres","$htMbP","validateGenres","JSON","parse","localStorage","getItem","$204205e4a52be051$export$f5a341b7ca0be7a","param","img","matchMedia","console","log","posterLink","backdropLink","src","$b5c949e87acd5c2c$var$upcomingEl","$b5c949e87acd5c2c$var$_handleUpcoming","upcomingMovies","randomMovie","debouncedImgHandler","getRandomItem","$b5c949e87acd5c2c$var$updateUpcoming","$l1Gdk","addEventListener","error","t0","markup","length","innerHTML"],"version":3,"file":"index.a3e8f407.js.map"}